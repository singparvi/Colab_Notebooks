{
 "cells": [
  {
   "cell_type": "code",
   "source": [],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "execution_count": 1,
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/rob/PycharmProjects/DS-Unit-1-Sprint-1-Data-Wrangling-and-Storytelling/venv/lib/python3.7/site-packages/seaborn/distributions.py:2551: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": "Text(0.5, 1.0, 'The normal distr')"
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": "<Figure size 576x576 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ]
  },
  {
   "cell_type": "markdown",
   "source": [
    "Objective 01 - explain the purpose of a t-test and identify applications\n",
    "\n",
    "Link for t test and t value --> https://www.khanacademy.org/math/statistics-probability/significance-tests-confidence-intervals-two-samples/comparing-two-means/v/difference-of-sample-means-distribution"
   ],
   "metadata": {
    "collapsed": false
   }
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "outputs": [],
   "source": [],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Objective 02 - set up and run a one-sample t-test"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n",
     "is_executing": true
    }
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid token (<ipython-input-15-88a6496a55fb>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001B[0;36m  File \u001B[0;32m\"<ipython-input-15-88a6496a55fb>\"\u001B[0;36m, line \u001B[0;32m1\u001B[0m\n\u001B[0;31m    Objective 02 - set up and run a one-sample t-test\u001B[0m\n\u001B[0m               ^\u001B[0m\n\u001B[0;31mSyntaxError\u001B[0m\u001B[0;31m:\u001B[0m invalid token\n"
     ]
    }
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sample mean  67.53441961583509\n",
      "Sample SD  6.00785209617076\n"
     ]
    },
    {
     "data": {
      "text/plain": "Ttest_1sampResult(statistic=-5.2030346601039055, pvalue=3.841987344207577e-06)"
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "rvs = stats.norm.rvs(loc=69, scale = 6.5, size = 50 , random_state = 42)\n",
    "rvs\n",
    "\n",
    "print ('Sample mean ', rvs.mean())\n",
    "print ('Sample SD ', rvs.std())\n",
    "\n",
    "# calculate the t values using the ttest_1samp\n",
    "stats.ttest_1samp(rvs, popmean=72)"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The t-statistics is -5.259180219473988\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "# calculate the t-value\n",
    "\n",
    "tstatistics = (67.53-72)/(6.01/np.sqrt(50))\n",
    "print ('The t-statistics is', tstatistics)\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Objective 03 - set up and run a two-sample independent t-test\n",
    "\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n",
     "is_executing": true
    }
   },
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid token (<ipython-input-23-346d0486280e>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001B[0;36m  File \u001B[0;32m\"<ipython-input-23-346d0486280e>\"\u001B[0;36m, line \u001B[0;32m1\u001B[0m\n\u001B[0;31m    Objective 03 - set up and run a two-sample independent t-test\u001B[0m\n\u001B[0m               ^\u001B[0m\n\u001B[0;31mSyntaxError\u001B[0m\u001B[0;31m:\u001B[0m invalid token\n"
     ]
    }
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "outputs": [
    {
     "data": {
      "text/plain": "Ttest_indResult(statistic=-1.809984738156694, pvalue=0.07336309397188605)"
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rvs1 = stats.norm.rvs(loc = 69, scale = 6.5, size = 50)\n",
    "rvs2 = stats.norm.rvs(loc=71, scale = 7.3, size = 50)\n",
    "\n",
    "# calculat the t statistics using ttest\n",
    "stats.ttest_ind(rvs1,rvs2)"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Objective 04 - Use a t-test p-value to draw a conclusion about the null and alternative hypothesis\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "REVISING\n",
    "\n",
    "Objective 01 - explain the purpose of a t-test and identify applications\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/rob/PycharmProjects/DS-Unit-1-Sprint-1-Data-Wrangling-and-Storytelling/venv/lib/python3.7/site-packages/seaborn/distributions.py:2551: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": "Text(0.5, 1.0, 'The Normal Distribution')"
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": "<Figure size 576x576 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "mean = 0\n",
    "sigma = 1\n",
    "\n",
    "# create a sample drawn from am normal dist\n",
    "sample = np.random.normal(loc= mean, scale= sigma, size= 1000)\n",
    "\n",
    "# plotting\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.style.use('seaborn-bright')\n",
    "\n",
    "# create fig and ax\n",
    "fig, ax = plt.subplots(figsize = (8,8))\n",
    "ax = sns.distplot(sample)\n",
    "\n",
    "ax.set_title('The Normal Distribution', fontsize = 16)\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "outputs": [
    {
     "data": {
      "text/plain": "<Figure size 432x288 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# t-tests for various sample size\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# create t-distributions\n",
    "\n",
    "t_df10 = np.random.standard_t(df=10, size=100)\n",
    "t_df100 = np.random.standard_t(df=100, size=1000)\n",
    "t_df1000 = np.random.standard_t(df=1000, size=10000)\n",
    "\n",
    "# create the normal distribution\n",
    "\n",
    "s = np.random.normal(size=10000)\n",
    "#\n",
    "fig, ax = plt.subplots(1)\n",
    "# plotting t distributions\n",
    "ax = sns.kdeplot(t_df10, color ='r')        #kernel density plot or kde is s a method for visualizing the distribution of observations in a dataset, analagous to a histogram\n",
    "ax = sns.kdeplot(t_df100, color ='y')\n",
    "ax = sns.kdeplot(t_df1000, color ='b')\n",
    "\n",
    "# plotting normal distributions\n",
    "ax = sns.kdeplot(s, color ='k')"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Objective 02 - set up and run a one-sample t-test"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean of the sample 67.53441961583509\n",
      "Std of the sample 6.00785209617076\n"
     ]
    },
    {
     "data": {
      "text/plain": "Ttest_1sampResult(statistic=-5.2030346601039055, pvalue=3.841987344207577e-06)"
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from scipy import stats\n",
    "\n",
    "# generate the random test scores with specified mean, std and size\n",
    "\n",
    "rvs = stats.norm.rvs(loc=69, scale=6.5, size=50, random_state=42)\n",
    "\n",
    "rvs\n",
    "\n",
    "#check the sample mean and std\n",
    "\n",
    "print ('Mean of the sample', rvs.mean())\n",
    "print ('Std of the sample', rvs.std())\n",
    "\n",
    "#calculate t value using ttest_1samp\n",
    "\n",
    "stats.ttest_1samp(rvs, popmean=72)   # Calculate the T-test for the mean of ONE group of scores.\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The t-statistic is:  -5.259180219473988\n"
     ]
    }
   ],
   "source": [
    "# Import the library\n",
    "import numpy as np\n",
    "\n",
    "# Calculate the t-value\n",
    "tstatistic = (67.53-72)/(6.01/np.sqrt(50))\n",
    "print('The t-statistic is: ', tstatistic)\n"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "markdown",
   "source": [
    "Objective 03 - set up and run a two-sample independent t-test"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%% md\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "outputs": [
    {
     "data": {
      "text/plain": "Ttest_indResult(statistic=-0.9579319437618443, pvalue=0.3392652865361556)"
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.random.seed(42)     #Seed the generator.\n",
    "\n",
    "#generate random variable with specified, mean, std, and sample size\n",
    "rvs1 = stats.norm.rvs(loc= 5, scale= 10, size= 100)\n",
    "rvs2 = stats.norm.rvs(loc= 5, scale= 10, size= 100)\n",
    "\n",
    "# calculate t stats for two sample population\n",
    "stats.ttest_ind(rvs1, rvs2)          #Calculate the T-test for the means of two independent samples of scores\n",
    "# stats.ttest_1samp   #Calculate the T-test for the mean of ONE group of scores."
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "outputs": [],
   "source": [
    "G"
   ],
   "metadata": {
    "collapsed": false,
    "pycharm": {
     "name": "#%%\n"
    }
   }
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}